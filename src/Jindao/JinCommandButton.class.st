"
---
title: CommandButton object (Access)
keywords: vbaac10.chm10554
f1_keywords:
- vbaac10.chm10554
ms.prod: access
api_name:
- Access.CommandButton
ms.assetid: 25e7c0b7-03c1-dffe-8f52-4ec59739f6b8
ms.date: 03/05/2019
localization_priority: Normal
---


# CommandButton object (Access)

This object corresponds to a command button. A command button on a form can start an action or a set of actions. For example, you could create a command button that opens another form. To make a command button do something, you write a macro or event procedure and attach it to the button's **OnClick** property.


## Remarks

|Control|Tool|
|:------|:---|
|![Command button](../images/t-cmdbtn_ZA06053979.gif)|![Command button](../images/command_ZA06047243.gif)|

You can display text on a command button by setting its **Caption** property, or you can display a picture by setting its **Picture** property.

> [!NOTE] 
> You can create over 30 different types of command buttons with the Command Button Wizard. When you use the Command Button Wizard, Microsoft Access creates the button and the event procedure for you.


## Events

- [Click](Access.CommandButton.Click.md)
- [DblClick](Access.CommandButton.DblClick.md)
- [Enter](Access.CommandButton.Enter.md)
- [Exit](Access.CommandButton.Exit.md)
- [GotFocus](Access.CommandButton.GotFocus.md)
- [KeyDown](Access.CommandButton.KeyDown.md)
- [KeyPress](Access.CommandButton.KeyPress.md)
- [KeyUp](Access.CommandButton.KeyUp.md)
- [LostFocus](Access.CommandButton.LostFocus.md)
- [MouseDown](Access.CommandButton.MouseDown.md)
- [MouseMove](Access.CommandButton.MouseMove.md)
- [MouseUp](Access.CommandButton.MouseUp.md)


## Methods

- [Move](Access.CommandButton.Move.md)
- [Requery](Access.CommandButton.Requery.md)
- [SetFocus](Access.CommandButton.SetFocus.md)
- [SizeToFit](Access.CommandButton.SizeToFit.md)


## Properties

- [AddColon](Access.CommandButton.AddColon.md)
- [Alignment](Access.CommandButton.Alignment.md)
- [Application](Access.CommandButton.Application.md)
- [AutoLabel](Access.CommandButton.AutoLabel.md)
- [AutoRepeat](Access.CommandButton.AutoRepeat.md)
- [BackColor](Access.CommandButton.BackColor.md)
- [BackShade](Access.CommandButton.BackShade.md)
- [BackStyle](Access.CommandButton.BackStyle.md)
- [BackThemeColorIndex](Access.CommandButton.BackThemeColorIndex.md)
- [BackTint](Access.CommandButton.BackTint.md)
- [Bevel](Access.CommandButton.Bevel.md)
- [BorderColor](Access.CommandButton.BorderColor.md)
- [BorderShade](Access.CommandButton.BorderShade.md)
- [BorderStyle](Access.CommandButton.BorderStyle.md)
- [BorderThemeColorIndex](Access.CommandButton.BorderThemeColorIndex.md)
- [BorderTint](Access.CommandButton.BorderTint.md)
- [BorderWidth](Access.CommandButton.BorderWidth.md)
- [BottomPadding](Access.CommandButton.BottomPadding.md)
- [Cancel](Access.CommandButton.Cancel.md)
- [Caption](Access.CommandButton.Caption.md)
- [Controls](Access.CommandButton.Controls.md)
- [ControlTipText](Access.CommandButton.ControlTipText.md)
- [ControlType](Access.CommandButton.ControlType.md)
- [CursorOnHover](Access.CommandButton.CursorOnHover.md)
- [Default](Access.CommandButton.Default.md)
- [DisplayWhen](Access.CommandButton.DisplayWhen.md)
- [Enabled](Access.CommandButton.Enabled.md)
- [EventProcPrefix](Access.CommandButton.EventProcPrefix.md)
- [FontBold](Access.CommandButton.FontBold.md)
- [FontItalic](Access.CommandButton.FontItalic.md)
- [FontName](Access.CommandButton.FontName.md)
- [FontSize](Access.CommandButton.FontSize.md)
- [FontUnderline](Access.CommandButton.FontUnderline.md)
- [FontWeight](Access.CommandButton.FontWeight.md)
- [ForeColor](Access.CommandButton.ForeColor.md)
- [ForeShade](Access.CommandButton.ForeShade.md)
- [ForeThemeColorIndex](Access.CommandButton.ForeThemeColorIndex.md)
- [ForeTint](Access.CommandButton.ForeTint.md)
- [Glow](Access.CommandButton.Glow.md)
- [Gradient](Access.CommandButton.Gradient.md)
- [GridlineColor](Access.CommandButton.GridlineColor.md)
- [GridlineShade](Access.CommandButton.GridlineShade.md)
- [GridlineStyleBottom](Access.CommandButton.GridlineStyleBottom.md)
- [GridlineStyleLeft](Access.CommandButton.GridlineStyleLeft.md)
- [GridlineStyleRight](Access.CommandButton.GridlineStyleRight.md)
- [GridlineStyleTop](Access.CommandButton.GridlineStyleTop.md)
- [GridlineThemeColorIndex](Access.CommandButton.GridlineThemeColorIndex.md)
- [GridlineTint](Access.CommandButton.GridlineTint.md)
- [GridlineWidthBottom](Access.CommandButton.GridlineWidthBottom.md)
- [GridlineWidthLeft](Access.CommandButton.GridlineWidthLeft.md)
- [GridlineWidthRight](Access.CommandButton.GridlineWidthRight.md)
- [GridlineWidthTop](Access.CommandButton.GridlineWidthTop.md)
- [Height](Access.CommandButton.Height.md)
- [HelpContextId](Access.CommandButton.HelpContextId.md)
- [HorizontalAnchor](Access.CommandButton.HorizontalAnchor.md)
- [HoverColor](Access.CommandButton.HoverColor.md)
- [HoverForeColor](Access.CommandButton.HoverForeColor.md)
- [HoverForeShade](Access.CommandButton.HoverForeShade.md)
- [HoverForeThemeColorIndex](Access.CommandButton.HoverForeThemeColorIndex.md)
- [HoverForeTint](Access.CommandButton.HoverForeTint.md)
- [HoverShade](Access.CommandButton.HoverShade.md)
- [HoverThemeColorIndex](Access.CommandButton.HoverThemeColorIndex.md)
- [HoverTint](Access.CommandButton.HoverTint.md)
- [Hyperlink](Access.CommandButton.Hyperlink.md)
- [HyperlinkAddress](Access.CommandButton.HyperlinkAddress.md)
- [HyperlinkSubAddress](Access.CommandButton.HyperlinkSubAddress.md)
- [InSelection](Access.CommandButton.InSelection.md)
- [IsVisible](Access.CommandButton.IsVisible.md)
- [LabelAlign](Access.CommandButton.LabelAlign.md)
- [LabelX](Access.CommandButton.LabelX.md)
- [LabelY](Access.CommandButton.LabelY.md)
- [Layout](Access.CommandButton.Layout.md)
- [LayoutID](Access.CommandButton.LayoutID.md)
- [Left](Access.CommandButton.Left.md)
- [LeftPadding](Access.CommandButton.LeftPadding.md)
- [Name](Access.CommandButton.Name.md)
- [ObjectPalette](Access.CommandButton.ObjectPalette.md)
- [OldValue](Access.CommandButton.OldValue.md)
- [OnClick](Access.CommandButton.OnClick.md)
- [OnDblClick](Access.CommandButton.OnDblClick.md)
- [OnEnter](Access.CommandButton.OnEnter.md)
- [OnExit](Access.CommandButton.OnExit.md)
- [OnGotFocus](Access.CommandButton.OnGotFocus.md)
- [OnKeyDown](Access.CommandButton.OnKeyDown.md)
- [OnKeyPress](Access.CommandButton.OnKeyPress.md)
- [OnKeyUp](Access.CommandButton.OnKeyUp.md)
- [OnLostFocus](Access.CommandButton.OnLostFocus.md)
- [OnMouseDown](Access.CommandButton.OnMouseDown.md)
- [OnMouseMove](Access.CommandButton.OnMouseMove.md)
- [OnMouseUp](Access.CommandButton.OnMouseUp.md)
- [OnPush](Access.CommandButton.OnPush.md)
- [Parent](Access.CommandButton.Parent.md)
- [Picture](Access.CommandButton.Picture.md)
- [PictureCaptionArrangement](Access.CommandButton.PictureCaptionArrangement.md)
- [PictureData](Access.CommandButton.PictureData.md)
- [PictureType](Access.CommandButton.PictureType.md)
- [PressedColor](Access.CommandButton.PressedColor.md)
- [PressedForeColor](Access.CommandButton.PressedForeColor.md)
- [PressedForeShade](Access.CommandButton.PressedForeShade.md)
- [PressedForeThemeColorIndex](Access.CommandButton.PressedForeThemeColorIndex.md)
- [PressedForeTint](Access.CommandButton.PressedForeTint.md)
- [PressedShade](Access.CommandButton.PressedShade.md)
- [PressedThemeColorIndex](Access.CommandButton.PressedThemeColorIndex.md)
- [PressedTint](Access.CommandButton.PressedTint.md)
- [Properties](Access.CommandButton.Properties.md)
- [QuickStyle](Access.CommandButton.QuickStyle.md)
- [QuickStyleMask](Access.commandbutton.quickstylemask.md)
- [ReadingOrder](Access.CommandButton.ReadingOrder.md)
- [RightPadding](Access.CommandButton.RightPadding.md)
- [Section](Access.CommandButton.Section.md)
- [Shadow](Access.CommandButton.Shadow.md)
- [Shape](Access.CommandButton.Shape.md)
- [ShortcutMenuBar](Access.CommandButton.ShortcutMenuBar.md)
- [SoftEdges](Access.CommandButton.SoftEdges.md)
- [StatusBarText](Access.CommandButton.StatusBarText.md)
- [TabIndex](Access.CommandButton.TabIndex.md)
- [TabStop](Access.CommandButton.TabStop.md)
- [Tag](Access.CommandButton.Tag.md)
- [ThemeFontIndex](Access.CommandButton.ThemeFontIndex.md)
- [Top](Access.CommandButton.Top.md)
- [TopPadding](Access.CommandButton.TopPadding.md)
- [Transparent](Access.CommandButton.Transparent.md)
- [UseTheme](Access.CommandButton.UseTheme.md)
- [VerticalAnchor](Access.CommandButton.VerticalAnchor.md)
- [Visible](Access.CommandButton.Visible.md)
- [Width](Access.CommandButton.Width.md)


## See also

- [Access Object Model Reference](overview/Access/object-model.md)



[!include[Support and feedback](~/includes/feedback-boilerplate.md)]

"
Class {
	#name : #JinCommandButton,
	#superclass : #JinControlAbstractCommandButton,
	#category : #'Jindao-FormControls-Builtin'
}

{ #category : #accessing }
JinCommandButton class >> componentKnownProperties [
	^ #(
    AddColon
    Alignment
    AutoLabel
    AutoRepeat
    BackColor
    BackShade
    BackStyle
    BackThemeColorIndex
    BackTint
    Bevel
    BorderColor
    BorderShade
    BorderStyle
    BorderThemeColorIndex
    BorderTint
    BorderWidth
    BottomPadding
    Cancel
    Caption
    ControlTipText
    ControlType
    CursorOnHover
    Default
    DisplayWhen
    Enabled
    EventProcPrefix
    FontBold
    FontItalic
    FontName
    FontSize
    FontUnderline
    FontWeight
    ForeColor
    ForeShade
    ForeThemeColorIndex
    ForeTint
    Glow
    Gradient
    GridlineColor
    GridlineShade
    GridlineStyleBottom
    GridlineStyleLeft
    GridlineStyleRight
    GridlineStyleTop
    GridlineThemeColorIndex
    GridlineTint
    GridlineWidthBottom
    GridlineWidthLeft
    GridlineWidthRight
    GridlineWidthTop
    Height
    HelpContextId
    HorizontalAnchor
    HoverColor
    HoverForeColor
    HoverForeShade
    HoverForeThemeColorIndex
    HoverForeTint
    HoverShade
    HoverThemeColorIndex
    HoverTint
    HyperlinkAddress
    HyperlinkSubAddress
    InSelection
    IsVisible
    LabelAlign
    LabelX
    LabelY
    Left
    LeftPadding
    Name
    ObjectPalette
    OldValue
    OnClick
    OnDblClick
    OnEnter
    OnExit
    OnGotFocus
    OnKeyDown
    OnKeyPress
    OnKeyUp
    OnLostFocus
    OnMouseDown
    OnMouseMove
    OnMouseUp
OnClickMacro
OnDblClickMacro
OnEnterMacro
OnExitMacro
OnGotFocusMacro
OnKeyDownMacro
OnKeyPressMacro
OnKeyUpMacro
OnLostFocusMacro
OnMouseDownMacro
OnMouseMoveMacro
OnMouseUpMacro
    OnPush
    Picture
    PictureCaptionArrangement
    PictureData
    PictureType
    PressedColor
    PressedForeColor
    PressedForeShade
    PressedForeThemeColorIndex
    PressedForeTint
    PressedShade
    PressedThemeColorIndex
    PressedTint
    QuickStyle
    QuickStyleMask
    ReadingOrder
    RightPadding
    Section
    Shadow
    Shape
    ShortcutMenuBar
    SoftEdges
    StatusBarText
    TabIndex
    TabStop
    Tag
    ThemeFontIndex
    Top
    TopPadding
    Transparent
    UseTheme
    VerticalAnchor
    Visible
    Width
)
]

{ #category : #generated }
JinCommandButton class >> mappedTypeName [
	^#'_CommandButton'
]

{ #category : #generated }
JinCommandButton >> acceptVisitor: aVisitor [
	^ aVisitor visitCommandButton: self
]

{ #category : #'property - generated' }
JinCommandButton >> addColon [
<getter>
	^ (handle propertyNamed: #'AddColon' ).

]

{ #category : #'property - generated' }
JinCommandButton >> addColon: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'AddColon' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> alignment [
<getter>
	^ (handle propertyNamed: #'Alignment' ).

]

{ #category : #'property - generated' }
JinCommandButton >> alignment: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Alignment' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> application [
<getter>
	^ (handle propertyNamed: #'Application' ).

]

{ #category : #'property - generated' }
JinCommandButton >> autoLabel [
<getter>
	^ (handle propertyNamed: #'AutoLabel' ).

]

{ #category : #'property - generated' }
JinCommandButton >> autoLabel: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'AutoLabel' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> autoRepeat [
<getter>
	^ (handle propertyNamed: #'AutoRepeat' ).

]

{ #category : #'property - generated' }
JinCommandButton >> autoRepeat: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'AutoRepeat' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> backColor [
<getter>
	^ (handle propertyNamed: #'BackColor' ).

]

{ #category : #'property - generated' }
JinCommandButton >> backColor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BackColor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> backShade [
<getter>
	^ (handle propertyNamed: #'BackShade' ).

]

{ #category : #'property - generated' }
JinCommandButton >> backShade: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BackShade' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> backStyle [
<getter>
	^ (handle propertyNamed: #'BackStyle' ).

]

{ #category : #'property - generated' }
JinCommandButton >> backStyle: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BackStyle' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> backThemeColorIndex [
<getter>
	^ (handle propertyNamed: #'BackThemeColorIndex' ).

]

{ #category : #'property - generated' }
JinCommandButton >> backThemeColorIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BackThemeColorIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> backTint [
<getter>
	^ (handle propertyNamed: #'BackTint' ).

]

{ #category : #'property - generated' }
JinCommandButton >> backTint: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BackTint' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> bevel [
<getter>
	^ (handle propertyNamed: #'Bevel' ).

]

{ #category : #'property - generated' }
JinCommandButton >> bevel: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Bevel' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> borderColor [
<getter>
	^ (handle propertyNamed: #'BorderColor' ).

]

{ #category : #'property - generated' }
JinCommandButton >> borderColor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BorderColor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> borderShade [
<getter>
	^ (handle propertyNamed: #'BorderShade' ).

]

{ #category : #'property - generated' }
JinCommandButton >> borderShade: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BorderShade' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> borderStyle [
<getter>
	^ (handle propertyNamed: #'BorderStyle' ).

]

{ #category : #'property - generated' }
JinCommandButton >> borderStyle: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BorderStyle' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> borderThemeColorIndex [
<getter>
	^ (handle propertyNamed: #'BorderThemeColorIndex' ).

]

{ #category : #'property - generated' }
JinCommandButton >> borderThemeColorIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BorderThemeColorIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> borderTint [
<getter>
	^ (handle propertyNamed: #'BorderTint' ).

]

{ #category : #'property - generated' }
JinCommandButton >> borderTint: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BorderTint' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> borderWidth [
<getter>
	^ (handle propertyNamed: #'BorderWidth' ).

]

{ #category : #'property - generated' }
JinCommandButton >> borderWidth: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BorderWidth' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> bottomPadding [
<getter>
	^ (handle propertyNamed: #'BottomPadding' ).

]

{ #category : #'property - generated' }
JinCommandButton >> bottomPadding: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BottomPadding' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> cancel [
<getter>
	^ (handle propertyNamed: #'Cancel' ).

]

{ #category : #'property - generated' }
JinCommandButton >> cancel: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Cancel' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> caption [
<getter>
	^ (handle propertyNamed: #'Caption' ).

]

{ #category : #'property - generated' }
JinCommandButton >> caption: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Caption' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> controlTipText [
<getter>
	^ (handle propertyNamed: #'ControlTipText' ).

]

{ #category : #'property - generated' }
JinCommandButton >> controlTipText: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ControlTipText' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> controlType [
<getter>
	^ (handle propertyNamed: #'ControlType' ).

]

{ #category : #'property - generated' }
JinCommandButton >> controlType: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ControlType' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> controls [
<getter>
	^ (handle propertyNamed: #'Controls' ).

]

{ #category : #'property - generated' }
JinCommandButton >> cursorOnHover [
<getter>
	^ (handle propertyNamed: #'CursorOnHover' ).

]

{ #category : #'property - generated' }
JinCommandButton >> cursorOnHover: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'CursorOnHover' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> default [
<getter>
	^ (handle propertyNamed: #'Default' ).

]

{ #category : #'property - generated' }
JinCommandButton >> default: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Default' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> displayWhen [
<getter>
	^ (handle propertyNamed: #'DisplayWhen' ).

]

{ #category : #'property - generated' }
JinCommandButton >> displayWhen: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'DisplayWhen' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> enabled [
<getter>
	^ (handle propertyNamed: #'Enabled' ).

]

{ #category : #'property - generated' }
JinCommandButton >> enabled: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Enabled' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> eventProcPrefix [
<getter>
	^ (handle propertyNamed: #'EventProcPrefix' ).

]

{ #category : #'property - generated' }
JinCommandButton >> eventProcPrefix: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'EventProcPrefix' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> fontBold [
<getter>
	^ (handle propertyNamed: #'FontBold' ).

]

{ #category : #'property - generated' }
JinCommandButton >> fontBold: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'FontBold' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> fontItalic [
<getter>
	^ (handle propertyNamed: #'FontItalic' ).

]

{ #category : #'property - generated' }
JinCommandButton >> fontItalic: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'FontItalic' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> fontName [
<getter>
	^ (handle propertyNamed: #'FontName' ).

]

{ #category : #'property - generated' }
JinCommandButton >> fontName: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'FontName' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> fontSize [
<getter>
	^ (handle propertyNamed: #'FontSize' ).

]

{ #category : #'property - generated' }
JinCommandButton >> fontSize: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'FontSize' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> fontUnderline [
<getter>
	^ (handle propertyNamed: #'FontUnderline' ).

]

{ #category : #'property - generated' }
JinCommandButton >> fontUnderline: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'FontUnderline' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> fontWeight [
<getter>
	^ (handle propertyNamed: #'FontWeight' ).

]

{ #category : #'property - generated' }
JinCommandButton >> fontWeight: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'FontWeight' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> foreColor [
<getter>
	^ (handle propertyNamed: #'ForeColor' ).

]

{ #category : #'property - generated' }
JinCommandButton >> foreColor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ForeColor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> foreShade [
<getter>
	^ (handle propertyNamed: #'ForeShade' ).

]

{ #category : #'property - generated' }
JinCommandButton >> foreShade: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ForeShade' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> foreThemeColorIndex [
<getter>
	^ (handle propertyNamed: #'ForeThemeColorIndex' ).

]

{ #category : #'property - generated' }
JinCommandButton >> foreThemeColorIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ForeThemeColorIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> foreTint [
<getter>
	^ (handle propertyNamed: #'ForeTint' ).

]

{ #category : #'property - generated' }
JinCommandButton >> foreTint: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ForeTint' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> glow [
<getter>
	^ (handle propertyNamed: #'Glow' ).

]

{ #category : #'property - generated' }
JinCommandButton >> glow: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Glow' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> gradient [
<getter>
	^ (handle propertyNamed: #'Gradient' ).

]

{ #category : #'property - generated' }
JinCommandButton >> gradient: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Gradient' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineColor [
<getter>
	^ (handle propertyNamed: #'GridlineColor' ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineColor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineColor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineShade [
<getter>
	^ (handle propertyNamed: #'GridlineShade' ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineShade: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineShade' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineStyleBottom [
<getter>
	^ (handle propertyNamed: #'GridlineStyleBottom' ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineStyleBottom: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineStyleBottom' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineStyleLeft [
<getter>
	^ (handle propertyNamed: #'GridlineStyleLeft' ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineStyleLeft: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineStyleLeft' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineStyleRight [
<getter>
	^ (handle propertyNamed: #'GridlineStyleRight' ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineStyleRight: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineStyleRight' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineStyleTop [
<getter>
	^ (handle propertyNamed: #'GridlineStyleTop' ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineStyleTop: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineStyleTop' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineThemeColorIndex [
<getter>
	^ (handle propertyNamed: #'GridlineThemeColorIndex' ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineThemeColorIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineThemeColorIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineTint [
<getter>
	^ (handle propertyNamed: #'GridlineTint' ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineTint: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineTint' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineWidthBottom [
<getter>
	^ (handle propertyNamed: #'GridlineWidthBottom' ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineWidthBottom: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineWidthBottom' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineWidthLeft [
<getter>
	^ (handle propertyNamed: #'GridlineWidthLeft' ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineWidthLeft: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineWidthLeft' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineWidthRight [
<getter>
	^ (handle propertyNamed: #'GridlineWidthRight' ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineWidthRight: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineWidthRight' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineWidthTop [
<getter>
	^ (handle propertyNamed: #'GridlineWidthTop' ).

]

{ #category : #'property - generated' }
JinCommandButton >> gridlineWidthTop: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineWidthTop' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> height [
<getter>
	^ (handle propertyNamed: #'Height' ).

]

{ #category : #'property - generated' }
JinCommandButton >> height: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Height' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> helpContextId [
<getter>
	^ (handle propertyNamed: #'HelpContextId' ).

]

{ #category : #'property - generated' }
JinCommandButton >> helpContextId: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HelpContextId' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> horizontalAnchor [
<getter>
	^ (handle propertyNamed: #'HorizontalAnchor' ).

]

{ #category : #'property - generated' }
JinCommandButton >> horizontalAnchor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HorizontalAnchor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> hoverColor [
<getter>
	^ (handle propertyNamed: #'HoverColor' ).

]

{ #category : #'property - generated' }
JinCommandButton >> hoverColor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HoverColor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> hoverForeColor [
<getter>
	^ (handle propertyNamed: #'HoverForeColor' ).

]

{ #category : #'property - generated' }
JinCommandButton >> hoverForeColor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HoverForeColor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> hoverForeShade [
<getter>
	^ (handle propertyNamed: #'HoverForeShade' ).

]

{ #category : #'property - generated' }
JinCommandButton >> hoverForeShade: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HoverForeShade' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> hoverForeThemeColorIndex [
<getter>
	^ (handle propertyNamed: #'HoverForeThemeColorIndex' ).

]

{ #category : #'property - generated' }
JinCommandButton >> hoverForeThemeColorIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HoverForeThemeColorIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> hoverForeTint [
<getter>
	^ (handle propertyNamed: #'HoverForeTint' ).

]

{ #category : #'property - generated' }
JinCommandButton >> hoverForeTint: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HoverForeTint' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> hoverShade [
<getter>
	^ (handle propertyNamed: #'HoverShade' ).

]

{ #category : #'property - generated' }
JinCommandButton >> hoverShade: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HoverShade' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> hoverThemeColorIndex [
<getter>
	^ (handle propertyNamed: #'HoverThemeColorIndex' ).

]

{ #category : #'property - generated' }
JinCommandButton >> hoverThemeColorIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HoverThemeColorIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> hoverTint [
<getter>
	^ (handle propertyNamed: #'HoverTint' ).

]

{ #category : #'property - generated' }
JinCommandButton >> hoverTint: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HoverTint' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> hyperlink [
<getter>
	^ (handle propertyNamed: #'Hyperlink' ).

]

{ #category : #'property - generated' }
JinCommandButton >> hyperlinkAddress [
<getter>
	^ (handle propertyNamed: #'HyperlinkAddress' ).

]

{ #category : #'property - generated' }
JinCommandButton >> hyperlinkAddress: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HyperlinkAddress' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> hyperlinkSubAddress [
<getter>
	^ (handle propertyNamed: #'HyperlinkSubAddress' ).

]

{ #category : #'property - generated' }
JinCommandButton >> hyperlinkSubAddress: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HyperlinkSubAddress' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> inSelection [
<getter>
	^ (handle propertyNamed: #'InSelection' ).

]

{ #category : #'property - generated' }
JinCommandButton >> inSelection: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'InSelection' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> isVisible [
<getter>
	^ (handle propertyNamed: #'IsVisible' ).

]

{ #category : #'property - generated' }
JinCommandButton >> isVisible: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'IsVisible' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> labelAlign [
<getter>
	^ (handle propertyNamed: #'LabelAlign' ).

]

{ #category : #'property - generated' }
JinCommandButton >> labelAlign: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'LabelAlign' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> labelX [
<getter>
	^ (handle propertyNamed: #'LabelX' ).

]

{ #category : #'property - generated' }
JinCommandButton >> labelX: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'LabelX' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> labelY [
<getter>
	^ (handle propertyNamed: #'LabelY' ).

]

{ #category : #'property - generated' }
JinCommandButton >> labelY: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'LabelY' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> layout [
<getter>
	^ (handle propertyNamed: #'Layout' ).

]

{ #category : #'property - generated' }
JinCommandButton >> layoutID [
<getter>
	^ (handle propertyNamed: #'LayoutID' ).

]

{ #category : #'property - generated' }
JinCommandButton >> left [
<getter>
	^ (handle propertyNamed: #'Left' ).

]

{ #category : #'property - generated' }
JinCommandButton >> left: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Left' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> leftPadding [
<getter>
	^ (handle propertyNamed: #'LeftPadding' ).

]

{ #category : #'property - generated' }
JinCommandButton >> leftPadding: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'LeftPadding' withArguments: {aParam1} ).

]

{ #category : #'method - generated' }
JinCommandButton >> move: aLeft top: aTop width: aWidth height: aHeight [
<method>
"This method can be called with optional parameters. Top,Width,Height"
	^ (handle dispatch: #'Move' withArguments: {aLeft . aTop . aWidth . aHeight} ).

]

{ #category : #'property - generated' }
JinCommandButton >> name: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Name' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> objectPalette [
<getter>
	^ (handle propertyNamed: #'ObjectPalette' ).

]

{ #category : #'property - generated' }
JinCommandButton >> objectPalette: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ObjectPalette' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> oldValue [
<getter>
	^ (handle propertyNamed: #'OldValue' ).

]

{ #category : #'property - generated' }
JinCommandButton >> onClick [
<getter>
	^ (handle propertyNamed: #'OnClick' ).

]

{ #category : #'property - generated' }
JinCommandButton >> onClick: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnClick' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> onDblClick [
<getter>
	^ (handle propertyNamed: #'OnDblClick' ).

]

{ #category : #'property - generated' }
JinCommandButton >> onDblClick: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnDblClick' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> onEnter [
<getter>
	^ (handle propertyNamed: #'OnEnter' ).

]

{ #category : #'property - generated' }
JinCommandButton >> onEnter: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnEnter' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> onExit [
<getter>
	^ (handle propertyNamed: #'OnExit' ).

]

{ #category : #'property - generated' }
JinCommandButton >> onExit: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnExit' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> onGotFocus [
<getter>
	^ (handle propertyNamed: #'OnGotFocus' ).

]

{ #category : #'property - generated' }
JinCommandButton >> onGotFocus: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnGotFocus' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> onKeyDown [
<getter>
	^ (handle propertyNamed: #'OnKeyDown' ).

]

{ #category : #'property - generated' }
JinCommandButton >> onKeyDown: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnKeyDown' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> onKeyPress [
<getter>
	^ (handle propertyNamed: #'OnKeyPress' ).

]

{ #category : #'property - generated' }
JinCommandButton >> onKeyPress: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnKeyPress' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> onKeyUp [
<getter>
	^ (handle propertyNamed: #'OnKeyUp' ).

]

{ #category : #'property - generated' }
JinCommandButton >> onKeyUp: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnKeyUp' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> onLostFocus [
<getter>
	^ (handle propertyNamed: #'OnLostFocus' ).

]

{ #category : #'property - generated' }
JinCommandButton >> onLostFocus: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnLostFocus' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> onMouseDown [
<getter>
	^ (handle propertyNamed: #'OnMouseDown' ).

]

{ #category : #'property - generated' }
JinCommandButton >> onMouseDown: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnMouseDown' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> onMouseMove [
<getter>
	^ (handle propertyNamed: #'OnMouseMove' ).

]

{ #category : #'property - generated' }
JinCommandButton >> onMouseMove: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnMouseMove' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> onMouseUp [
<getter>
	^ (handle propertyNamed: #'OnMouseUp' ).

]

{ #category : #'property - generated' }
JinCommandButton >> onMouseUp: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnMouseUp' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> onPush [
<getter>
	^ (handle propertyNamed: #'OnPush' ).

]

{ #category : #'property - generated' }
JinCommandButton >> onPush: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnPush' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> picture [
<getter>
	^ (handle propertyNamed: #'Picture' ).

]

{ #category : #'property - generated' }
JinCommandButton >> picture: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Picture' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> pictureCaptionArrangement [
<getter>
	^ (handle propertyNamed: #'PictureCaptionArrangement' ).

]

{ #category : #'property - generated' }
JinCommandButton >> pictureCaptionArrangement: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PictureCaptionArrangement' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> pictureData [
<getter>
	^ (handle propertyNamed: #'PictureData' ).

]

{ #category : #'property - generated' }
JinCommandButton >> pictureData: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PictureData' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> pictureType [
<getter>
	^ (handle propertyNamed: #'PictureType' ).

]

{ #category : #'property - generated' }
JinCommandButton >> pictureType: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PictureType' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> pressedColor [
<getter>
	^ (handle propertyNamed: #'PressedColor' ).

]

{ #category : #'property - generated' }
JinCommandButton >> pressedColor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PressedColor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> pressedForeColor [
<getter>
	^ (handle propertyNamed: #'PressedForeColor' ).

]

{ #category : #'property - generated' }
JinCommandButton >> pressedForeColor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PressedForeColor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> pressedForeShade [
<getter>
	^ (handle propertyNamed: #'PressedForeShade' ).

]

{ #category : #'property - generated' }
JinCommandButton >> pressedForeShade: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PressedForeShade' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> pressedForeThemeColorIndex [
<getter>
	^ (handle propertyNamed: #'PressedForeThemeColorIndex' ).

]

{ #category : #'property - generated' }
JinCommandButton >> pressedForeThemeColorIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PressedForeThemeColorIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> pressedForeTint [
<getter>
	^ (handle propertyNamed: #'PressedForeTint' ).

]

{ #category : #'property - generated' }
JinCommandButton >> pressedForeTint: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PressedForeTint' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> pressedShade [
<getter>
	^ (handle propertyNamed: #'PressedShade' ).

]

{ #category : #'property - generated' }
JinCommandButton >> pressedShade: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PressedShade' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> pressedThemeColorIndex [
<getter>
	^ (handle propertyNamed: #'PressedThemeColorIndex' ).

]

{ #category : #'property - generated' }
JinCommandButton >> pressedThemeColorIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PressedThemeColorIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> pressedTint [
<getter>
	^ (handle propertyNamed: #'PressedTint' ).

]

{ #category : #'property - generated' }
JinCommandButton >> pressedTint: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PressedTint' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> quickStyle [
<getter>
	^ (handle propertyNamed: #'QuickStyle' ).

]

{ #category : #'property - generated' }
JinCommandButton >> quickStyle: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'QuickStyle' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> readingOrder [
<getter>
	^ (handle propertyNamed: #'ReadingOrder' ).

]

{ #category : #'property - generated' }
JinCommandButton >> readingOrder: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ReadingOrder' withArguments: {aParam1} ).

]

{ #category : #'method - generated' }
JinCommandButton >> requery [
<method>
	^ (handle dispatch: #'Requery' ).

]

{ #category : #'property - generated' }
JinCommandButton >> rightPadding [
<getter>
	^ (handle propertyNamed: #'RightPadding' ).

]

{ #category : #'property - generated' }
JinCommandButton >> rightPadding: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'RightPadding' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> section [
<getter>
	^ (handle propertyNamed: #'Section' ).

]

{ #category : #'property - generated' }
JinCommandButton >> section: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Section' withArguments: {aParam1} ).

]

{ #category : #'method - generated' }
JinCommandButton >> setFocus [
<method>
	^ (handle dispatch: #'SetFocus' ).

]

{ #category : #'property - generated' }
JinCommandButton >> shadow [
<getter>
	^ (handle propertyNamed: #'Shadow' ).

]

{ #category : #'property - generated' }
JinCommandButton >> shadow: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Shadow' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> shape [
<getter>
	^ (handle propertyNamed: #'Shape' ).

]

{ #category : #'property - generated' }
JinCommandButton >> shape: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Shape' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> shortcutMenuBar [
<getter>
	^ (handle propertyNamed: #'ShortcutMenuBar' ).

]

{ #category : #'property - generated' }
JinCommandButton >> shortcutMenuBar: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ShortcutMenuBar' withArguments: {aParam1} ).

]

{ #category : #'method - generated' }
JinCommandButton >> sizeToFit [
<method>
	^ (handle dispatch: #'SizeToFit' ).

]

{ #category : #'property - generated' }
JinCommandButton >> softEdges [
<getter>
	^ (handle propertyNamed: #'SoftEdges' ).

]

{ #category : #'property - generated' }
JinCommandButton >> softEdges: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'SoftEdges' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> statusBarText [
<getter>
	^ (handle propertyNamed: #'StatusBarText' ).

]

{ #category : #'property - generated' }
JinCommandButton >> statusBarText: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'StatusBarText' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> tabIndex [
<getter>
	^ (handle propertyNamed: #'TabIndex' ).

]

{ #category : #'property - generated' }
JinCommandButton >> tabIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'TabIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> tabStop [
<getter>
	^ (handle propertyNamed: #'TabStop' ).

]

{ #category : #'property - generated' }
JinCommandButton >> tabStop: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'TabStop' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> tag [
<getter>
	^ (handle propertyNamed: #'Tag' ).

]

{ #category : #'property - generated' }
JinCommandButton >> tag: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Tag' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> themeFontIndex [
<getter>
	^ (handle propertyNamed: #'ThemeFontIndex' ).

]

{ #category : #'property - generated' }
JinCommandButton >> themeFontIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ThemeFontIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> top [
<getter>
	^ (handle propertyNamed: #'Top' ).

]

{ #category : #'property - generated' }
JinCommandButton >> top: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Top' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> topPadding [
<getter>
	^ (handle propertyNamed: #'TopPadding' ).

]

{ #category : #'property - generated' }
JinCommandButton >> topPadding: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'TopPadding' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> transparent [
<getter>
	^ (handle propertyNamed: #'Transparent' ).

]

{ #category : #'property - generated' }
JinCommandButton >> transparent: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Transparent' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> useTheme [
<getter>
	^ (handle propertyNamed: #'UseTheme' ).

]

{ #category : #'property - generated' }
JinCommandButton >> useTheme: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'UseTheme' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> verticalAnchor [
<getter>
	^ (handle propertyNamed: #'VerticalAnchor' ).

]

{ #category : #'property - generated' }
JinCommandButton >> verticalAnchor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'VerticalAnchor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> visible [
<getter>
	^ (handle propertyNamed: #'Visible' ).

]

{ #category : #'property - generated' }
JinCommandButton >> visible: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Visible' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinCommandButton >> width [
<getter>
	^ (handle propertyNamed: #'Width' ).

]

{ #category : #'property - generated' }
JinCommandButton >> width: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Width' withArguments: {aParam1} ).

]
