"
---
title: TabControl object (Access)
keywords: vbaac10.chm12136
f1_keywords:
- vbaac10.chm12136
ms.prod: access
api_name:
- Access.TabControl
ms.assetid: 05f7de7b-8665-df6d-3fbb-47f8547d3baf
ms.date: 03/21/2019
localization_priority: Normal
---


# TabControl object (Access)

A tab control contains multiple pages on which you can place other controls, such as text boxes or option buttons. When a user chooses the corresponding tab, that page becomes active.


## Remarks

With the tab control, you can construct a single form or dialog box that contains several different tabs, and you can group similar options or data on each tab's page. For example, you might use a tab control on an **Employees** form to separate general and personal information.


## Events

- [Change](Access.TabControl.Change.md)
- [Click](Access.TabControl.Click.md)
- [DblClick](Access.TabControl.DblClick.md)
- [KeyDown](Access.TabControl.KeyDown.md)
- [KeyPress](Access.TabControl.KeyPress.md)
- [KeyUp](Access.TabControl.KeyUp.md)
- [MouseDown](Access.TabControl.MouseDown.md)
- [MouseMove](Access.TabControl.MouseMove.md)
- [MouseUp](Access.TabControl.MouseUp.md)

## Methods

- [Move](Access.TabControl.Move.md)
- [SizeToFit](Access.TabControl.SizeToFit.md)

## Properties

- [Application](Access.TabControl.Application.md)
- [BackColor](Access.TabControl.BackColor.md)
- [BackShade](Access.TabControl.BackShade.md)
- [BackStyle](Access.TabControl.BackStyle.md)
- [BackThemeColorIndex](Access.TabControl.BackThemeColorIndex.md)
- [BackTint](Access.TabControl.BackTint.md)
- [BorderColor](Access.TabControl.BorderColor.md)
- [BorderShade](Access.TabControl.BorderShade.md)
- [BorderStyle](Access.TabControl.BorderStyle.md)
- [BorderThemeColorIndex](Access.TabControl.BorderThemeColorIndex.md)
- [BorderTint](Access.TabControl.BorderTint.md)
- [BottomPadding](Access.TabControl.BottomPadding.md)
- [ControlType](Access.TabControl.ControlType.md)
- [DisplayWhen](Access.TabControl.DisplayWhen.md)
- [Enabled](Access.TabControl.Enabled.md)
- [EventProcPrefix](Access.TabControl.EventProcPrefix.md)
- [FontBold](Access.TabControl.FontBold.md)
- [FontItalic](Access.TabControl.FontItalic.md)
- [FontName](Access.TabControl.FontName.md)
- [FontSize](Access.TabControl.FontSize.md)
- [FontUnderline](Access.TabControl.FontUnderline.md)
- [FontWeight](Access.TabControl.FontWeight.md)
- [ForeColor](Access.TabControl.ForeColor.md)
- [ForeShade](Access.TabControl.ForeShade.md)
- [ForeThemeColorIndex](Access.TabControl.ForeThemeColorIndex.md)
- [ForeTint](Access.TabControl.ForeTint.md)
- [Gradient](Access.TabControl.Gradient.md)
- [GridlineColor](Access.TabControl.GridlineColor.md)
- [GridlineShade](Access.TabControl.GridlineShade.md)
- [GridlineStyleBottom](Access.TabControl.GridlineStyleBottom.md)
- [GridlineStyleLeft](Access.TabControl.GridlineStyleLeft.md)
- [GridlineStyleRight](Access.TabControl.GridlineStyleRight.md)
- [GridlineStyleTop](Access.TabControl.GridlineStyleTop.md)
- [GridlineThemeColorIndex](Access.TabControl.GridlineThemeColorIndex.md)
- [GridlineTint](Access.TabControl.GridlineTint.md)
- [GridlineWidthBottom](Access.TabControl.GridlineWidthBottom.md)
- [GridlineWidthLeft](Access.TabControl.GridlineWidthLeft.md)
- [GridlineWidthRight](Access.TabControl.GridlineWidthRight.md)
- [GridlineWidthTop](Access.TabControl.GridlineWidthTop.md)
- [Height](Access.TabControl.Height.md)
- [HelpContextId](Access.TabControl.HelpContextId.md)
- [HorizontalAnchor](Access.TabControl.HorizontalAnchor.md)
- [HoverColor](Access.TabControl.HoverColor.md)
- [HoverForeColor](Access.TabControl.HoverForeColor.md)
- [HoverForeShade](Access.TabControl.HoverForeShade.md)
- [HoverForeThemeColorIndex](Access.TabControl.HoverForeThemeColorIndex.md)
- [HoverForeTint](Access.TabControl.HoverForeTint.md)
- [HoverShade](Access.TabControl.HoverShade.md)
- [HoverThemeColorIndex](Access.TabControl.HoverThemeColorIndex.md)
- [HoverTint](Access.TabControl.HoverTint.md)
- [InSelection](Access.TabControl.InSelection.md)
- [IsVisible](Access.TabControl.IsVisible.md)
- [Layout](Access.TabControl.Layout.md)
- [LayoutID](Access.TabControl.LayoutID.md)
- [Left](Access.TabControl.Left.md)
- [LeftPadding](Access.TabControl.LeftPadding.md)
- [MultiRow](Access.TabControl.MultiRow.md)
- [Name](Access.TabControl.Name.md)
- [OldValue](Access.TabControl.OldValue.md)
- [OnChange](Access.TabControl.OnChange.md)
- [OnClick](Access.TabControl.OnClick.md)
- [OnDblClick](Access.TabControl.OnDblClick.md)
- [OnKeyDown](Access.TabControl.OnKeyDown.md)
- [OnKeyPress](Access.TabControl.OnKeyPress.md)
- [OnKeyUp](Access.TabControl.OnKeyUp.md)
- [OnMouseDown](Access.TabControl.OnMouseDown.md)
- [OnMouseMove](Access.TabControl.OnMouseMove.md)
- [OnMouseUp](Access.TabControl.OnMouseUp.md)
- [Pages](Access.TabControl.Pages.md)
- [Parent](Access.TabControl.Parent.md)
- [PressedColor](Access.TabControl.PressedColor.md)
- [PressedForeColor](Access.TabControl.PressedForeColor.md)
- [PressedForeShade](Access.TabControl.PressedForeShade.md)
- [PressedForeThemeColorIndex](Access.TabControl.PressedForeThemeColorIndex.md)
- [PressedForeTint](Access.TabControl.PressedForeTint.md)
- [PressedShade](Access.TabControl.PressedShade.md)
- [PressedThemeColorIndex](Access.TabControl.PressedThemeColorIndex.md)
- [PressedTint](Access.TabControl.PressedTint.md)
- [Properties](Access.TabControl.Properties.md)
- [RightPadding](Access.TabControl.RightPadding.md)
- [Section](Access.TabControl.Section.md)
- [Shape](Access.TabControl.Shape.md)
- [ShortcutMenuBar](Access.TabControl.ShortcutMenuBar.md)
- [StatusBarText](Access.TabControl.StatusBarText.md)
- [Style](Access.TabControl.Style.md)
- [TabFixedHeight](Access.TabControl.TabFixedHeight.md)
- [TabFixedWidth](Access.TabControl.TabFixedWidth.md)
- [TabIndex](Access.TabControl.TabIndex.md)
- [TabStop](Access.TabControl.TabStop.md)
- [Tag](Access.TabControl.Tag.md)
- [ThemeFontIndex](Access.TabControl.ThemeFontIndex.md)
- [Top](Access.TabControl.Top.md)
- [TopPadding](Access.TabControl.TopPadding.md)
- [UseTheme](Access.TabControl.UseTheme.md)
- [Value](Access.TabControl.Value.md)
- [VerticalAnchor](Access.TabControl.VerticalAnchor.md)
- [Visible](Access.TabControl.Visible.md)
- [Width](Access.TabControl.Width.md)

## See also

- [Access Object Model Reference](overview/Access/object-model.md)


[!include[Support and feedback](~/includes/feedback-boilerplate.md)]

"
Class {
	#name : #JinTabControl,
	#superclass : #JinControlAbstractTabControl,
	#category : #'Jindao-FormControls-Builtin'
}

{ #category : #accessing }
JinTabControl class >> componentKnownProperties [
"https://docs.microsoft.com/en-us/office/vba/api/access.tabcontrol"
	^ #(
    
    BackColor
    BackShade
    BackStyle
    BackThemeColorIndex
    BackTint
    BorderColor
    BorderShade
    BorderStyle
    BorderThemeColorIndex
    BorderTint
    BottomPadding
    ControlType
    DisplayWhen
    Enabled
    EventProcPrefix
    FontBold
    FontItalic
    FontName
    FontSize
    FontUnderline
    FontWeight
    ForeColor
    ForeShade
    ForeThemeColorIndex
    ForeTint
    Gradient
    GridlineColor
    GridlineShade
    GridlineStyleBottom
    GridlineStyleLeft
    GridlineStyleRight
    GridlineStyleTop
    GridlineThemeColorIndex
    GridlineTint
    GridlineWidthBottom
    GridlineWidthLeft
    GridlineWidthRight
    GridlineWidthTop
    Height
    HelpContextId
    HorizontalAnchor
    HoverColor
    HoverForeColor
    HoverForeShade
    HoverForeThemeColorIndex
    HoverForeTint
    HoverShade
    HoverThemeColorIndex
    HoverTint
    InSelection
    IsVisible
    Layout
    LayoutID
    Left
    LeftPadding
    MultiRow
    Name
    OldValue
    OnChange
    OnClick
    OnDblClick
    OnKeyDown
    OnKeyPress
    OnKeyUp
    OnMouseDown
    OnMouseMove
    OnMouseUp
'OnChangeMacro' 'OnClickMacro' 'OnDblClickMacro' 'OnKeyDownMacro' 'OnKeyPressMacro' 'OnKeyUpMacro' 'OnMouseDownMacro' 'OnMouseMoveMacro' 'OnMouseUpMacro'
    PressedColor
    PressedForeColor
    PressedForeShade
    PressedForeThemeColorIndex
    PressedForeTint
    PressedShade
    PressedThemeColorIndex
    PressedTint
    RightPadding
    Section
    Shape
    ShortcutMenuBar
    StatusBarText
    Style
    TabFixedHeight
    TabFixedWidth
    TabIndex
    TabStop
    Tag
    ThemeFontIndex
    Top
    TopPadding
    UseTheme
    Value
    VerticalAnchor
    Visible
    Width
)
]

{ #category : #generated }
JinTabControl class >> mappedTypeName [
	^#'_TabControl'
]

{ #category : #generated }
JinTabControl >> acceptVisitor: aVisitor [
	^ aVisitor visitTabControl: self
]

{ #category : #'property - generated' }
JinTabControl >> application [
<getter>
	^ (handle propertyNamed: #'Application' ).

]

{ #category : #'property - generated' }
JinTabControl >> backColor [
<getter>
	^ (handle propertyNamed: #'BackColor' ).

]

{ #category : #'property - generated' }
JinTabControl >> backColor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BackColor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> backShade [
<getter>
	^ (handle propertyNamed: #'BackShade' ).

]

{ #category : #'property - generated' }
JinTabControl >> backShade: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BackShade' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> backStyle [
<getter>
	^ (handle propertyNamed: #'BackStyle' ).

]

{ #category : #'property - generated' }
JinTabControl >> backStyle: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BackStyle' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> backThemeColorIndex [
<getter>
	^ (handle propertyNamed: #'BackThemeColorIndex' ).

]

{ #category : #'property - generated' }
JinTabControl >> backThemeColorIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BackThemeColorIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> backTint [
<getter>
	^ (handle propertyNamed: #'BackTint' ).

]

{ #category : #'property - generated' }
JinTabControl >> backTint: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BackTint' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> borderColor [
<getter>
	^ (handle propertyNamed: #'BorderColor' ).

]

{ #category : #'property - generated' }
JinTabControl >> borderColor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BorderColor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> borderShade [
<getter>
	^ (handle propertyNamed: #'BorderShade' ).

]

{ #category : #'property - generated' }
JinTabControl >> borderShade: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BorderShade' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> borderStyle [
<getter>
	^ (handle propertyNamed: #'BorderStyle' ).

]

{ #category : #'property - generated' }
JinTabControl >> borderStyle: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BorderStyle' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> borderThemeColorIndex [
<getter>
	^ (handle propertyNamed: #'BorderThemeColorIndex' ).

]

{ #category : #'property - generated' }
JinTabControl >> borderThemeColorIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BorderThemeColorIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> borderTint [
<getter>
	^ (handle propertyNamed: #'BorderTint' ).

]

{ #category : #'property - generated' }
JinTabControl >> borderTint: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BorderTint' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> bottomPadding [
<getter>
	^ (handle propertyNamed: #'BottomPadding' ).

]

{ #category : #'property - generated' }
JinTabControl >> bottomPadding: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'BottomPadding' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> controlType [
<getter>
	^ (handle propertyNamed: #'ControlType' ).

]

{ #category : #'property - generated' }
JinTabControl >> controlType: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ControlType' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> createIn: aForm [
	super createIn: aForm.
	
"	| control pages |
	control := super createIn: aForm.
	pages := control pages.
	(pages propertyNamed: #Count)
		timesRepeat: [ pages dispatch: #Remove ].
	^ control"
]

{ #category : #'property - generated' }
JinTabControl >> displayWhen [
<getter>
	^ (handle propertyNamed: #'DisplayWhen' ).

]

{ #category : #'property - generated' }
JinTabControl >> displayWhen: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'DisplayWhen' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> enabled [
<getter>
	^ (handle propertyNamed: #'Enabled' ).

]

{ #category : #'property - generated' }
JinTabControl >> enabled: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Enabled' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> eventProcPrefix [
<getter>
	^ (handle propertyNamed: #'EventProcPrefix' ).

]

{ #category : #'property - generated' }
JinTabControl >> eventProcPrefix: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'EventProcPrefix' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> fontBold [
<getter>
	^ (handle propertyNamed: #'FontBold' ).

]

{ #category : #'property - generated' }
JinTabControl >> fontBold: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'FontBold' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> fontItalic [
<getter>
	^ (handle propertyNamed: #'FontItalic' ).

]

{ #category : #'property - generated' }
JinTabControl >> fontItalic: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'FontItalic' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> fontName [
<getter>
	^ (handle propertyNamed: #'FontName' ).

]

{ #category : #'property - generated' }
JinTabControl >> fontName: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'FontName' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> fontSize [
<getter>
	^ (handle propertyNamed: #'FontSize' ).

]

{ #category : #'property - generated' }
JinTabControl >> fontSize: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'FontSize' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> fontUnderline [
<getter>
	^ (handle propertyNamed: #'FontUnderline' ).

]

{ #category : #'property - generated' }
JinTabControl >> fontUnderline: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'FontUnderline' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> fontWeight [
<getter>
	^ (handle propertyNamed: #'FontWeight' ).

]

{ #category : #'property - generated' }
JinTabControl >> fontWeight: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'FontWeight' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> foreColor [
<getter>
	^ (handle propertyNamed: #'ForeColor' ).

]

{ #category : #'property - generated' }
JinTabControl >> foreColor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ForeColor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> foreShade [
<getter>
	^ (handle propertyNamed: #'ForeShade' ).

]

{ #category : #'property - generated' }
JinTabControl >> foreShade: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ForeShade' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> foreThemeColorIndex [
<getter>
	^ (handle propertyNamed: #'ForeThemeColorIndex' ).

]

{ #category : #'property - generated' }
JinTabControl >> foreThemeColorIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ForeThemeColorIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> foreTint [
<getter>
	^ (handle propertyNamed: #'ForeTint' ).

]

{ #category : #'property - generated' }
JinTabControl >> foreTint: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ForeTint' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> gradient [
<getter>
	^ (handle propertyNamed: #'Gradient' ).

]

{ #category : #'property - generated' }
JinTabControl >> gradient: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Gradient' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineColor [
<getter>
	^ (handle propertyNamed: #'GridlineColor' ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineColor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineColor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineShade [
<getter>
	^ (handle propertyNamed: #'GridlineShade' ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineShade: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineShade' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineStyleBottom [
<getter>
	^ (handle propertyNamed: #'GridlineStyleBottom' ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineStyleBottom: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineStyleBottom' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineStyleLeft [
<getter>
	^ (handle propertyNamed: #'GridlineStyleLeft' ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineStyleLeft: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineStyleLeft' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineStyleRight [
<getter>
	^ (handle propertyNamed: #'GridlineStyleRight' ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineStyleRight: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineStyleRight' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineStyleTop [
<getter>
	^ (handle propertyNamed: #'GridlineStyleTop' ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineStyleTop: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineStyleTop' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineThemeColorIndex [
<getter>
	^ (handle propertyNamed: #'GridlineThemeColorIndex' ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineThemeColorIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineThemeColorIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineTint [
<getter>
	^ (handle propertyNamed: #'GridlineTint' ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineTint: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineTint' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineWidthBottom [
<getter>
	^ (handle propertyNamed: #'GridlineWidthBottom' ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineWidthBottom: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineWidthBottom' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineWidthLeft [
<getter>
	^ (handle propertyNamed: #'GridlineWidthLeft' ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineWidthLeft: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineWidthLeft' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineWidthRight [
<getter>
	^ (handle propertyNamed: #'GridlineWidthRight' ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineWidthRight: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineWidthRight' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineWidthTop [
<getter>
	^ (handle propertyNamed: #'GridlineWidthTop' ).

]

{ #category : #'property - generated' }
JinTabControl >> gridlineWidthTop: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'GridlineWidthTop' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> height [
<getter>
	^ (handle propertyNamed: #'Height' ).

]

{ #category : #'property - generated' }
JinTabControl >> height: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Height' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> helpContextId [
<getter>
	^ (handle propertyNamed: #'HelpContextId' ).

]

{ #category : #'property - generated' }
JinTabControl >> helpContextId: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HelpContextId' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> horizontalAnchor [
<getter>
	^ (handle propertyNamed: #'HorizontalAnchor' ).

]

{ #category : #'property - generated' }
JinTabControl >> horizontalAnchor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HorizontalAnchor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> hoverColor [
<getter>
	^ (handle propertyNamed: #'HoverColor' ).

]

{ #category : #'property - generated' }
JinTabControl >> hoverColor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HoverColor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> hoverForeColor [
<getter>
	^ (handle propertyNamed: #'HoverForeColor' ).

]

{ #category : #'property - generated' }
JinTabControl >> hoverForeColor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HoverForeColor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> hoverForeShade [
<getter>
	^ (handle propertyNamed: #'HoverForeShade' ).

]

{ #category : #'property - generated' }
JinTabControl >> hoverForeShade: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HoverForeShade' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> hoverForeThemeColorIndex [
<getter>
	^ (handle propertyNamed: #'HoverForeThemeColorIndex' ).

]

{ #category : #'property - generated' }
JinTabControl >> hoverForeThemeColorIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HoverForeThemeColorIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> hoverForeTint [
<getter>
	^ (handle propertyNamed: #'HoverForeTint' ).

]

{ #category : #'property - generated' }
JinTabControl >> hoverForeTint: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HoverForeTint' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> hoverShade [
<getter>
	^ (handle propertyNamed: #'HoverShade' ).

]

{ #category : #'property - generated' }
JinTabControl >> hoverShade: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HoverShade' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> hoverThemeColorIndex [
<getter>
	^ (handle propertyNamed: #'HoverThemeColorIndex' ).

]

{ #category : #'property - generated' }
JinTabControl >> hoverThemeColorIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HoverThemeColorIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> hoverTint [
<getter>
	^ (handle propertyNamed: #'HoverTint' ).

]

{ #category : #'property - generated' }
JinTabControl >> hoverTint: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'HoverTint' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> inSelection [
<getter>
	^ (handle propertyNamed: #'InSelection' ).

]

{ #category : #'property - generated' }
JinTabControl >> inSelection: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'InSelection' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> isVisible [
<getter>
	^ (handle propertyNamed: #'IsVisible' ).

]

{ #category : #'property - generated' }
JinTabControl >> isVisible: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'IsVisible' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> layout [
<getter>
	^ (handle propertyNamed: #'Layout' ).

]

{ #category : #'property - generated' }
JinTabControl >> layoutID [
<getter>
	^ (handle propertyNamed: #'LayoutID' ).

]

{ #category : #'property - generated' }
JinTabControl >> left [
<getter>
	^ (handle propertyNamed: #'Left' ).

]

{ #category : #'property - generated' }
JinTabControl >> left: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Left' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> leftPadding [
<getter>
	^ (handle propertyNamed: #'LeftPadding' ).

]

{ #category : #'property - generated' }
JinTabControl >> leftPadding: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'LeftPadding' withArguments: {aParam1} ).

]

{ #category : #'method - generated' }
JinTabControl >> move: aLeft top: aTop width: aWidth height: aHeight [
<method>
"This method can be called with optional parameters. Top,Width,Height"
	^ (handle dispatch: #'Move' withArguments: {aLeft . aTop . aWidth . aHeight} ).

]

{ #category : #'property - generated' }
JinTabControl >> multiRow [
<getter>
	^ (handle propertyNamed: #'MultiRow' ).

]

{ #category : #'property - generated' }
JinTabControl >> multiRow: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'MultiRow' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> name: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Name' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> oldValue [
<getter>
	^ (handle propertyNamed: #'OldValue' ).

]

{ #category : #'property - generated' }
JinTabControl >> onChange [
<getter>
	^ (handle propertyNamed: #'OnChange' ).

]

{ #category : #'property - generated' }
JinTabControl >> onChange: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnChange' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> onClick [
<getter>
	^ (handle propertyNamed: #'OnClick' ).

]

{ #category : #'property - generated' }
JinTabControl >> onClick: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnClick' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> onDblClick [
<getter>
	^ (handle propertyNamed: #'OnDblClick' ).

]

{ #category : #'property - generated' }
JinTabControl >> onDblClick: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnDblClick' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> onKeyDown [
<getter>
	^ (handle propertyNamed: #'OnKeyDown' ).

]

{ #category : #'property - generated' }
JinTabControl >> onKeyDown: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnKeyDown' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> onKeyPress [
<getter>
	^ (handle propertyNamed: #'OnKeyPress' ).

]

{ #category : #'property - generated' }
JinTabControl >> onKeyPress: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnKeyPress' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> onKeyUp [
<getter>
	^ (handle propertyNamed: #'OnKeyUp' ).

]

{ #category : #'property - generated' }
JinTabControl >> onKeyUp: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnKeyUp' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> onMouseDown [
<getter>
	^ (handle propertyNamed: #'OnMouseDown' ).

]

{ #category : #'property - generated' }
JinTabControl >> onMouseDown: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnMouseDown' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> onMouseMove [
<getter>
	^ (handle propertyNamed: #'OnMouseMove' ).

]

{ #category : #'property - generated' }
JinTabControl >> onMouseMove: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnMouseMove' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> onMouseUp [
<getter>
	^ (handle propertyNamed: #'OnMouseUp' ).

]

{ #category : #'property - generated' }
JinTabControl >> onMouseUp: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'OnMouseUp' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> pages [
<getter>
	^ (handle propertyNamed: #'Pages' ).

]

{ #category : #'property - generated' }
JinTabControl >> pressedColor [
<getter>
	^ (handle propertyNamed: #'PressedColor' ).

]

{ #category : #'property - generated' }
JinTabControl >> pressedColor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PressedColor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> pressedForeColor [
<getter>
	^ (handle propertyNamed: #'PressedForeColor' ).

]

{ #category : #'property - generated' }
JinTabControl >> pressedForeColor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PressedForeColor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> pressedForeShade [
<getter>
	^ (handle propertyNamed: #'PressedForeShade' ).

]

{ #category : #'property - generated' }
JinTabControl >> pressedForeShade: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PressedForeShade' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> pressedForeThemeColorIndex [
<getter>
	^ (handle propertyNamed: #'PressedForeThemeColorIndex' ).

]

{ #category : #'property - generated' }
JinTabControl >> pressedForeThemeColorIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PressedForeThemeColorIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> pressedForeTint [
<getter>
	^ (handle propertyNamed: #'PressedForeTint' ).

]

{ #category : #'property - generated' }
JinTabControl >> pressedForeTint: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PressedForeTint' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> pressedShade [
<getter>
	^ (handle propertyNamed: #'PressedShade' ).

]

{ #category : #'property - generated' }
JinTabControl >> pressedShade: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PressedShade' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> pressedThemeColorIndex [
<getter>
	^ (handle propertyNamed: #'PressedThemeColorIndex' ).

]

{ #category : #'property - generated' }
JinTabControl >> pressedThemeColorIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PressedThemeColorIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> pressedTint [
<getter>
	^ (handle propertyNamed: #'PressedTint' ).

]

{ #category : #'property - generated' }
JinTabControl >> pressedTint: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'PressedTint' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> rightPadding [
<getter>
	^ (handle propertyNamed: #'RightPadding' ).

]

{ #category : #'property - generated' }
JinTabControl >> rightPadding: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'RightPadding' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> section [
<getter>
	^ (handle propertyNamed: #'Section' ).

]

{ #category : #'property - generated' }
JinTabControl >> section: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Section' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> shape [
<getter>
	^ (handle propertyNamed: #'Shape' ).

]

{ #category : #'property - generated' }
JinTabControl >> shape: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Shape' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> shortcutMenuBar [
<getter>
	^ (handle propertyNamed: #'ShortcutMenuBar' ).

]

{ #category : #'property - generated' }
JinTabControl >> shortcutMenuBar: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ShortcutMenuBar' withArguments: {aParam1} ).

]

{ #category : #'method - generated' }
JinTabControl >> sizeToFit [
<method>
	^ (handle dispatch: #'SizeToFit' ).

]

{ #category : #'property - generated' }
JinTabControl >> statusBarText [
<getter>
	^ (handle propertyNamed: #'StatusBarText' ).

]

{ #category : #'property - generated' }
JinTabControl >> statusBarText: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'StatusBarText' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> style [
<getter>
	^ (handle propertyNamed: #'Style' ).

]

{ #category : #'property - generated' }
JinTabControl >> style: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Style' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> tabFixedHeight [
<getter>
	^ (handle propertyNamed: #'TabFixedHeight' ).

]

{ #category : #'property - generated' }
JinTabControl >> tabFixedHeight: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'TabFixedHeight' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> tabFixedWidth [
<getter>
	^ (handle propertyNamed: #'TabFixedWidth' ).

]

{ #category : #'property - generated' }
JinTabControl >> tabFixedWidth: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'TabFixedWidth' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> tabIndex [
<getter>
	^ (handle propertyNamed: #'TabIndex' ).

]

{ #category : #'property - generated' }
JinTabControl >> tabIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'TabIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> tabStop [
<getter>
	^ (handle propertyNamed: #'TabStop' ).

]

{ #category : #'property - generated' }
JinTabControl >> tabStop: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'TabStop' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> tag [
<getter>
	^ (handle propertyNamed: #'Tag' ).

]

{ #category : #'property - generated' }
JinTabControl >> tag: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Tag' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> themeFontIndex [
<getter>
	^ (handle propertyNamed: #'ThemeFontIndex' ).

]

{ #category : #'property - generated' }
JinTabControl >> themeFontIndex: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'ThemeFontIndex' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> top [
<getter>
	^ (handle propertyNamed: #'Top' ).

]

{ #category : #'property - generated' }
JinTabControl >> top: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Top' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> topPadding [
<getter>
	^ (handle propertyNamed: #'TopPadding' ).

]

{ #category : #'property - generated' }
JinTabControl >> topPadding: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'TopPadding' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> useTheme [
<getter>
	^ (handle propertyNamed: #'UseTheme' ).

]

{ #category : #'property - generated' }
JinTabControl >> useTheme: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'UseTheme' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> value [
<getter>
	^ (handle propertyNamed: #'Value' ).

]

{ #category : #'property - generated' }
JinTabControl >> value: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Value' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> verticalAnchor [
<getter>
	^ (handle propertyNamed: #'VerticalAnchor' ).

]

{ #category : #'property - generated' }
JinTabControl >> verticalAnchor: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'VerticalAnchor' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> visible [
<getter>
	^ (handle propertyNamed: #'Visible' ).

]

{ #category : #'property - generated' }
JinTabControl >> visible: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Visible' withArguments: {aParam1} ).

]

{ #category : #'property - generated' }
JinTabControl >> width [
<getter>
	^ (handle propertyNamed: #'Width' ).

]

{ #category : #'property - generated' }
JinTabControl >> width: aParam1 [
<setter>
		
	^ (handle propertyNamed: #'Width' withArguments: {aParam1} ).

]
